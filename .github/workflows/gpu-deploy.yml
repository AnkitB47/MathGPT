name: üñ•Ô∏è Deploy GPU Assistant

on:
  push:
    branches: [ main ]
    paths:
      - 'coding-assistant/**'
      - 'terraform/**'
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  deploy-gpu:
    name: Deploy GPU
    runs-on: ubuntu-latest
    needs: terraform   # waits for terraform.yml

    env:
      PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      REGION:     ${{ secrets.GCP_REGION }}
      CLUSTER:    mathsgpt-gpu-cluster
      NAMESPACE:  gpu-assistant

    steps:
      - uses: actions/checkout@v3

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Install gcloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.PROJECT_ID }}
          export_default_credentials: true

      - name: Get GKE credentials
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: ${{ env.CLUSTER }}
          location:     ${{ env.REGION }}

      - name: Create namespace
        run: |
          kubectl create namespace ${{ env.NAMESPACE }} \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Deploy GPU resources
        run: |
          kubectl apply -f coding-assistant/kubernetes/deployment.yaml \
             -n ${{ env.NAMESPACE }}
          kubectl apply -f coding-assistant/kubernetes/service.yaml \
             -n ${{ env.NAMESPACE }}
          kubectl rollout status deployment/coding-assistant \
            -n ${{ env.NAMESPACE }} --timeout=300s

      - name: Show GPU LB IP
        run: |
          echo "GPU LB IP ‚Üí" \
            $(kubectl get svc coding-assistant \
               -n ${{ env.NAMESPACE }} \
               -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
