name: üõ† Terraform Deploy

on:
  push:
    paths:
      - 'terraform/**'
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

env:
  STATE_BUCKET: ${{ secrets.GCP_TF_STATE_BUCKET }}
  PROJECT_ID:   ${{ secrets.GCP_PROJECT_ID }}
  REGION:       ${{ secrets.GCP_REGION }}
  CLUSTER_NAME: ${{ secrets.GKE_CLUSTER_NAME }}

jobs:
  infra:
    name: üöß Infra (GKE & Node Pools)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Install gcloud SDK (with kubectl + auth plugin)
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.PROJECT_ID }}
          export_default_credentials: true
          install_components: |
            kubectl
            gke-gcloud-auth-plugin

      - name: Install Terraform CLI
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init (infra)
        working-directory: terraform/infra
        run: |
          terraform init -reconfigure \
            -backend-config="bucket=${{ env.STATE_BUCKET }}" \
            -backend-config="prefix=terraform/state/infra"

      - name: Import existing deployer SA if present
        working-directory: terraform/infra
        env:
          PROJECT_ID: ${{ env.PROJECT_ID }}
        run: |
          SA_EMAIL="mathsgpt-deployer@${PROJECT_ID}.iam.gserviceaccount.com"
          if gcloud iam service-accounts describe "$SA_EMAIL" \
               --project="$PROJECT_ID" &> /dev/null; then
            echo "‚ÑπÔ∏è  Found existing SA $SA_EMAIL ‚Üí importing into Terraform state"
            terraform import google_service_account.deployer \
              "projects/${PROJECT_ID}/serviceAccounts/${SA_EMAIL}"
          else
            echo "‚ÑπÔ∏è  No existing SA $SA_EMAIL, Terraform will create it"
          fi

      - name: Terraform Apply (infra)
        working-directory: terraform/infra
        run: |
          terraform apply \
            -var-file="../terraform.tfvars" \
            -auto-approve \
            -lock=false

  apps:
    name: üöÄ Apps (Cloud Run + Helm)
    needs: infra
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Install gcloud SDK (with kubectl + auth plugin)
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.PROJECT_ID }}
          export_default_credentials: true
          install_components: |
            kubectl
            gke-gcloud-auth-plugin

      - name: Fetch GKE credentials
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: ${{ env.CLUSTER_NAME }}
          location:     ${{ env.REGION }}

      - name: Install Terraform CLI
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init (apps)
        working-directory: terraform/apps
        run: |
          terraform init -reconfigure \
            -backend-config="bucket=${{ env.STATE_BUCKET }}" \
            -backend-config="prefix=terraform/state/apps"

      - name: Terraform Apply (apps)
        working-directory: terraform/apps
        run: |
          terraform apply \
            -var-file="../terraform.tfvars" \
            -auto-approve \
            -lock=false

      - name: Show Cloud Run URL
        working-directory: terraform/apps
        run: |
          echo "‚Üí Cloud Run URL: $(terraform output -raw cloud_run_url)"
