name: 🛠 Terraform Deploy

on:
  push:
    paths:
      - 'terraform/**'
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

env:
  STATE_BUCKET: ${{ secrets.GCP_TF_STATE_BUCKET }}
  PROJECT_ID:   ${{ secrets.GCP_PROJECT_ID }}
  REGION:       ${{ secrets.GCP_REGION }}
  CLUSTER_NAME: ${{ secrets.GKE_CLUSTER_NAME }}

jobs:
  infra:
    name: 🚧 Infra (GKE & node‐pools)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Install gcloud, kubectl & GKE auth plugin
        run: |
          curl -fsSL https://sdk.cloud.google.com | bash >/dev/null
          source "$HOME/google-cloud-sdk/path.bash.inc"
          gcloud components install kubectl gke-gcloud-auth-plugin --quiet

      - name: Setup Terraform CLI
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest

      - name: Terraform Init (infra)
        working-directory: terraform/infra
        run: |
          terraform init -reconfigure \
            -backend-config="bucket=${STATE_BUCKET}" \
            -backend-config="prefix=terraform/state/infra"

      - name: Import existing deployer SA if present
        working-directory: terraform/infra
        run: |
          SA_EMAIL="mathsgpt-deployer@${PROJECT_ID}.iam.gserviceaccount.com"
          if gcloud iam service-accounts describe "$SA_EMAIL" --project="$PROJECT_ID" &> /dev/null; then
            echo "ℹ️  Found existing SA $SA_EMAIL → importing into Terraform state"
            terraform import google_service_account.deployer \
              "projects/${PROJECT_ID}/serviceAccounts/${SA_EMAIL}"
          else
            echo "ℹ️  No existing SA $SA_EMAIL, Terraform will create it"
          fi

      - name: Terraform Apply (infra)
        working-directory: terraform/infra
        run: |
          terraform apply \
            -var-file="terraform.tfvars" \
            -auto-approve \
            -lock=false

  apps:
    name: 🚀 Apps (Cloud Run + Helm)
    needs: infra
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Authenticate to GCP
        uses: google-github-actions-auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Install gcloud, kubectl & GKE auth plugin
        run: |
          curl -fsSL https://sdk.cloud.google.com | bash >/dev/null
          source "$HOME/google-cloud-sdk/path.bash.inc"
          gcloud components install kubectl gke-gcloud-auth-plugin --quiet

      - name: Setup Terraform CLI
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest

      - name: Fetch GKE credentials
        run: |
          gcloud container clusters get-credentials "$CLUSTER_NAME" \
            --region="$REGION" --project="$PROJECT_ID" --quiet

      - name: Install Helm 3 & add repo
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo update

      - name: Terraform Init & Apply (apps)
        working-directory: terraform/apps
        run: |
          terraform init -reconfigure \
            -backend-config="bucket=${STATE_BUCKET}" \
            -backend-config="prefix=terraform/state/apps"
          terraform apply \
            -var-file="terraform.tfvars" \
            -auto-approve \
            -lock=false

      - name: Output Cloud Run URL
        working-directory: terraform/apps
        run: |
          echo "→ Cloud Run URL: $(terraform output -raw cloud_run_url)"
